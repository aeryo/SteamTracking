{
	"apilist": {
		"interfaces": [
			{
				"name": "ISteamApps",
				"methods": [
					{
						"name": "GetAppList",
						"version": 1,
						"httpmethod": "GET",
						"parameters": [

						]
						
					},
					{
						"name": "GetAppList",
						"version": 2,
						"httpmethod": "GET",
						"parameters": [

						]
						
					},
					{
						"name": "GetServersAtAddress",
						"version": 1,
						"httpmethod": "GET",
						"parameters": [
							{
								"name": "addr",
								"type": "string",
								"optional": false,
								"description": "IP or IP:queryport to list"
							}
						]
						
					},
					{
						"name": "UpToDateCheck",
						"version": 1,
						"httpmethod": "GET",
						"parameters": [
							{
								"name": "appid",
								"type": "uint32",
								"optional": false,
								"description": "AppID of game"
							},
							{
								"name": "version",
								"type": "uint32",
								"optional": false,
								"description": "The installed version of the game"
							}
						]
						
					}
				]
				
			},
			{
				"name": "ISteamEconomy",
				"methods": [
					{
						"name": "GetAssetClassInfo",
						"version": 1,
						"httpmethod": "GET",
						"parameters": [
							{
								"name": "appid",
								"type": "uint32",
								"optional": false,
								"description": "Must be a steam economy app."
							},
							{
								"name": "language",
								"type": "string",
								"optional": true,
								"description": "The user's local language"
							},
							{
								"name": "class_count",
								"type": "uint32",
								"optional": false,
								"description": "Number of classes requested. Must be at least one."
							},
							{
								"name": "classid0",
								"type": "uint64",
								"optional": false,
								"description": "Class ID of the nth class."
							},
							{
								"name": "instanceid0",
								"type": "uint64",
								"optional": true,
								"description": "Instance ID of the nth class."
							}
						]
						
					},
					{
						"name": "GetAssetPrices",
						"version": 1,
						"httpmethod": "GET",
						"parameters": [
							{
								"name": "appid",
								"type": "uint32",
								"optional": false,
								"description": "Must be a steam economy app."
							},
							{
								"name": "currency",
								"type": "string",
								"optional": true,
								"description": "The currency to filter for"
							},
							{
								"name": "language",
								"type": "string",
								"optional": true,
								"description": "The user's local language"
							}
						]
						
					}
				]
				
			},
			{
				"name": "ISteamNews",
				"methods": [
					{
						"name": "GetNewsForApp",
						"version": 1,
						"httpmethod": "GET",
						"parameters": [
							{
								"name": "appid",
								"type": "uint32",
								"optional": false,
								"description": "AppID to retrieve news for"
							},
							{
								"name": "maxlength",
								"type": "uint32",
								"optional": true,
								"description": "Maximum length for the content to return, if this is 0 the full content is returned, if it's less then a blurb is generated to fit."
							},
							{
								"name": "enddate",
								"type": "uint32",
								"optional": true,
								"description": "Retrieve posts earlier than this date (unix epoch timestamp)"
							},
							{
								"name": "count",
								"type": "uint32",
								"optional": true,
								"description": "# of posts to retrieve (default 20)"
							}
						]
						
					},
					{
						"name": "GetNewsForApp",
						"version": 2,
						"httpmethod": "GET",
						"parameters": [
							{
								"name": "appid",
								"type": "uint32",
								"optional": false,
								"description": "AppID to retrieve news for"
							},
							{
								"name": "maxlength",
								"type": "uint32",
								"optional": true,
								"description": "Maximum length for the content to return, if this is 0 the full content is returned, if it's less then a blurb is generated to fit."
							},
							{
								"name": "enddate",
								"type": "uint32",
								"optional": true,
								"description": "Retrieve posts earlier than this date (unix epoch timestamp)"
							},
							{
								"name": "count",
								"type": "uint32",
								"optional": true,
								"description": "# of posts to retrieve (default 20)"
							},
							{
								"name": "feeds",
								"type": "string",
								"optional": true,
								"description": "Comma-seperated list of feed names to return news for"
							}
						]
						
					}
				]
				
			},
			{
				"name": "ISteamRemoteStorage",
				"methods": [
					{
						"name": "GetCollectionDetails",
						"version": 1,
						"httpmethod": "POST",
						"parameters": [
							{
								"name": "collectioncount",
								"type": "uint32",
								"optional": false,
								"description": "Number of collection being requested"
							},
							{
								"name": "publishedfileids[0]",
								"type": "uint64",
								"optional": false,
								"description": "collection ids to get the details for"
							}
						]
						
					},
					{
						"name": "GetPublishedFileDetails",
						"version": 1,
						"httpmethod": "POST",
						"parameters": [
							{
								"name": "itemcount",
								"type": "uint32",
								"optional": false,
								"description": "Number of items being requested"
							},
							{
								"name": "publishedfileids[0]",
								"type": "uint64",
								"optional": false,
								"description": "published file id to look up"
							}
						]
						
					},
					{
						"name": "GetUGCFileDetails",
						"version": 1,
						"httpmethod": "GET",
						"parameters": [
							{
								"name": "steamid",
								"type": "uint64",
								"optional": true,
								"description": "If specified, only returns details if the file is owned by the SteamID specified"
							},
							{
								"name": "ugcid",
								"type": "uint64",
								"optional": false,
								"description": "ID of UGC file to get info for"
							},
							{
								"name": "appid",
								"type": "uint32",
								"optional": false,
								"description": "appID of product"
							}
						]
						
					}
				]
				
			},
			{
				"name": "ISteamUser",
				"methods": [
					{
						"name": "GetFriendList",
						"version": 1,
						"httpmethod": "GET",
						"parameters": [
							{
								"name": "key",
								"type": "string",
								"optional": false,
								"description": "access key"
							},
							{
								"name": "steamid",
								"type": "uint64",
								"optional": false,
								"description": "SteamID of user"
							},
							{
								"name": "relationship",
								"type": "string",
								"optional": true,
								"description": "relationship type (ex: friend)"
							}
						]
						
					},
					{
						"name": "GetPlayerBans",
						"version": 1,
						"httpmethod": "GET",
						"parameters": [
							{
								"name": "key",
								"type": "string",
								"optional": false,
								"description": "access key"
							},
							{
								"name": "steamids",
								"type": "string",
								"optional": false,
								"description": "Comma-delimited list of SteamIDs"
							}
						]
						
					},
					{
						"name": "GetPlayerSummaries",
						"version": 1,
						"httpmethod": "GET",
						"parameters": [
							{
								"name": "key",
								"type": "string",
								"optional": false,
								"description": "access key"
							},
							{
								"name": "steamids",
								"type": "string",
								"optional": false,
								"description": "Comma-delimited list of SteamIDs"
							}
						]
						
					},
					{
						"name": "GetPlayerSummaries",
						"version": 2,
						"httpmethod": "GET",
						"parameters": [
							{
								"name": "key",
								"type": "string",
								"optional": false,
								"description": "access key"
							},
							{
								"name": "steamids",
								"type": "string",
								"optional": false,
								"description": "Comma-delimited list of SteamIDs (max: 100)"
							}
						]
						
					},
					{
						"name": "GetUserGroupList",
						"version": 1,
						"httpmethod": "GET",
						"parameters": [
							{
								"name": "key",
								"type": "string",
								"optional": false,
								"description": "access key"
							},
							{
								"name": "steamid",
								"type": "uint64",
								"optional": false,
								"description": "SteamID of user"
							}
						]
						
					},
					{
						"name": "ResolveVanityURL",
						"version": 1,
						"httpmethod": "GET",
						"parameters": [
							{
								"name": "key",
								"type": "string",
								"optional": false,
								"description": "access key"
							},
							{
								"name": "vanityurl",
								"type": "string",
								"optional": false,
								"description": "The vanity URL to get a SteamID for"
							}
						]
						
					}
				]
				
			},
			{
				"name": "ISteamUserAuth",
				"methods": [
					{
						"name": "AuthenticateUser",
						"version": 1,
						"httpmethod": "POST",
						"parameters": [
							{
								"name": "steamid",
								"type": "uint64",
								"optional": false,
								"description": "Should be the users steamid, unencrypted."
							},
							{
								"name": "sessionkey",
								"type": "rawbinary",
								"optional": false,
								"description": "Should be a 32 byte random blob of data, which is then encrypted with RSA using the Steam system's public key.  Randomness is important here for security."
							},
							{
								"name": "encrypted_loginkey",
								"type": "rawbinary",
								"optional": false,
								"description": "Should be the users hashed loginkey, AES encrypted with the sessionkey."
							}
						]
						
					},
					{
						"name": "AuthenticateUserTicket",
						"version": 1,
						"httpmethod": "GET",
						"parameters": [
							{
								"name": "key",
								"type": "string",
								"optional": false,
								"description": "access key"
							},
							{
								"name": "appid",
								"type": "uint32",
								"optional": false,
								"description": "appid of game"
							},
							{
								"name": "ticket",
								"type": "string",
								"optional": false,
								"description": "Ticket from GetAuthSessionTicket."
							}
						]
						
					}
				]
				
			},
			{
				"name": "ISteamUserOAuth",
				"methods": [
					{
						"name": "GetTokenDetails",
						"version": 1,
						"httpmethod": "GET",
						"parameters": [
							{
								"name": "access_token",
								"type": "string",
								"optional": false,
								"description": "OAuth2 token for which to return details"
							}
						]
						
					}
				]
				
			},
			{
				"name": "ISteamUserStats",
				"methods": [
					{
						"name": "GetGlobalAchievementPercentagesForApp",
						"version": 1,
						"httpmethod": "GET",
						"parameters": [
							{
								"name": "gameid",
								"type": "uint64",
								"optional": false,
								"description": "GameID to retrieve the achievement percentages for"
							}
						]
						
					},
					{
						"name": "GetGlobalAchievementPercentagesForApp",
						"version": 2,
						"httpmethod": "GET",
						"parameters": [
							{
								"name": "gameid",
								"type": "uint64",
								"optional": false,
								"description": "GameID to retrieve the achievement percentages for"
							}
						]
						
					},
					{
						"name": "GetGlobalStatsForGame",
						"version": 1,
						"httpmethod": "GET",
						"parameters": [
							{
								"name": "appid",
								"type": "uint32",
								"optional": false,
								"description": "AppID that we're getting global stats for"
							},
							{
								"name": "count",
								"type": "uint32",
								"optional": false,
								"description": "Number of stats get data for"
							},
							{
								"name": "name[0]",
								"type": "string",
								"optional": false,
								"description": "Names of stat to get data for"
							},
							{
								"name": "startdate",
								"type": "uint32",
								"optional": true,
								"description": "Start date for daily totals (unix epoch timestamp)"
							},
							{
								"name": "enddate",
								"type": "uint32",
								"optional": true,
								"description": "End date for daily totals (unix epoch timestamp)"
							}
						]
						
					},
					{
						"name": "GetNumberOfCurrentPlayers",
						"version": 1,
						"httpmethod": "GET",
						"parameters": [
							{
								"name": "appid",
								"type": "uint32",
								"optional": false,
								"description": "AppID that we're getting user count for"
							}
						]
						
					},
					{
						"name": "GetPlayerAchievements",
						"version": 1,
						"httpmethod": "GET",
						"parameters": [
							{
								"name": "key",
								"type": "string",
								"optional": false,
								"description": "access key"
							},
							{
								"name": "steamid",
								"type": "uint64",
								"optional": false,
								"description": "SteamID of user"
							},
							{
								"name": "appid",
								"type": "uint32",
								"optional": false,
								"description": "AppID to get achievements for"
							},
							{
								"name": "l",
								"type": "string",
								"optional": true,
								"description": "Language to return strings for"
							}
						]
						
					},
					{
						"name": "GetSchemaForGame",
						"version": 1,
						"httpmethod": "GET",
						"parameters": [
							{
								"name": "key",
								"type": "string",
								"optional": false,
								"description": "access key"
							},
							{
								"name": "appid",
								"type": "uint32",
								"optional": false,
								"description": "appid of game"
							},
							{
								"name": "l",
								"type": "string",
								"optional": true,
								"description": "localized langauge to return (english, french, etc.)"
							}
						]
						
					},
					{
						"name": "GetSchemaForGame",
						"version": 2,
						"httpmethod": "GET",
						"parameters": [
							{
								"name": "key",
								"type": "string",
								"optional": false,
								"description": "access key"
							},
							{
								"name": "appid",
								"type": "uint32",
								"optional": false,
								"description": "appid of game"
							},
							{
								"name": "l",
								"type": "string",
								"optional": true,
								"description": "localized language to return (english, french, etc.)"
							}
						]
						
					},
					{
						"name": "GetUserStatsForGame",
						"version": 1,
						"httpmethod": "GET",
						"parameters": [
							{
								"name": "key",
								"type": "string",
								"optional": false,
								"description": "access key"
							},
							{
								"name": "steamid",
								"type": "uint64",
								"optional": false,
								"description": "SteamID of user"
							},
							{
								"name": "appid",
								"type": "uint32",
								"optional": false,
								"description": "appid of game"
							}
						]
						
					},
					{
						"name": "GetUserStatsForGame",
						"version": 2,
						"httpmethod": "GET",
						"parameters": [
							{
								"name": "key",
								"type": "string",
								"optional": false,
								"description": "access key"
							},
							{
								"name": "steamid",
								"type": "uint64",
								"optional": false,
								"description": "SteamID of user"
							},
							{
								"name": "appid",
								"type": "uint32",
								"optional": false,
								"description": "appid of game"
							}
						]
						
					}
				]
				
			},
			{
				"name": "ISteamWebAPIUtil",
				"methods": [
					{
						"name": "GetServerInfo",
						"version": 1,
						"httpmethod": "GET",
						"parameters": [

						]
						
					},
					{
						"name": "GetSupportedAPIList",
						"version": 1,
						"httpmethod": "GET",
						"parameters": [
							{
								"name": "key",
								"type": "string",
								"optional": true,
								"description": "access key"
							}
						]
						
					}
				]
				
			},
			{
				"name": "ISteamWebUserPresenceOAuth",
				"methods": [
					{
						"name": "PollStatus",
						"version": 1,
						"httpmethod": "POST",
						"parameters": [
							{
								"name": "steamid",
								"type": "string",
								"optional": false,
								"description": "Steam ID of the user"
							},
							{
								"name": "umqid",
								"type": "uint64",
								"optional": false,
								"description": "UMQ Session ID"
							},
							{
								"name": "message",
								"type": "uint32",
								"optional": false,
								"description": "Message that was last known to the user"
							},
							{
								"name": "pollid",
								"type": "uint32",
								"optional": true,
								"description": "Caller-specific poll id"
							},
							{
								"name": "sectimeout",
								"type": "uint32",
								"optional": true,
								"description": "Long-poll timeout in seconds"
							},
							{
								"name": "secidletime",
								"type": "uint32",
								"optional": true,
								"description": "How many seconds is client considering itself idle, e.g. screen is off"
							},
							{
								"name": "use_accountids",
								"type": "uint32",
								"optional": true,
								"description": "Boolean, 0 (default): return steamid_from in output, 1: return accountid_from"
							}
						]
						
					}
				]
				
			},
			{
				"name": "IGameServersService",
				"methods": [
					{
						"name": "GetAccountList",
						"version": 1,
						"httpmethod": "GET",
						"description": "Gets a list of game server accounts with their logon tokens",
						"parameters": [
							{
								"name": "key",
								"type": "string",
								"optional": false,
								"description": "Access key"
							}
						]
						
					},
					{
						"name": "CreateAccount",
						"version": 1,
						"httpmethod": "POST",
						"description": "Creates a persistent game server account",
						"parameters": [
							{
								"name": "key",
								"type": "string",
								"optional": false,
								"description": "Access key"
							},
							{
								"name": "appid",
								"type": "uint32",
								"optional": false,
								"description": "The app to use the account for"
							},
							{
								"name": "memo",
								"type": "string",
								"optional": false,
								"description": "The memo to set on the new account"
							}
						]
						
					},
					{
						"name": "SetMemo",
						"version": 1,
						"httpmethod": "POST",
						"description": "This method changes the memo associated with the game server account. Memos do not affect the account in any way. The memo shows up in the GetAccountList response and serves only as a reminder of what the account is used for.",
						"parameters": [
							{
								"name": "key",
								"type": "string",
								"optional": false,
								"description": "Access key"
							},
							{
								"name": "steamid",
								"type": "uint64",
								"optional": false,
								"description": "The SteamID of the game server to set the memo on"
							},
							{
								"name": "memo",
								"type": "string",
								"optional": false,
								"description": "The memo to set on the new account"
							}
						]
						
					},
					{
						"name": "ResetLoginToken",
						"version": 1,
						"httpmethod": "POST",
						"description": "Generates a new login token for the specified game server",
						"parameters": [
							{
								"name": "key",
								"type": "string",
								"optional": false,
								"description": "Access key"
							},
							{
								"name": "steamid",
								"type": "uint64",
								"optional": false,
								"description": "The SteamID of the game server to reset the login token of"
							}
						]
						
					},
					{
						"name": "GetAccountPublicInfo",
						"version": 1,
						"httpmethod": "GET",
						"description": "Gets public information about a given game server account",
						"parameters": [
							{
								"name": "key",
								"type": "string",
								"optional": false,
								"description": "Access key"
							},
							{
								"name": "steamid",
								"type": "uint64",
								"optional": false,
								"description": "The SteamID of the game server to get info on"
							}
						]
						
					},
					{
						"name": "GetServerSteamIDsByIP",
						"version": 1,
						"httpmethod": "GET",
						"description": "Gets a list of server SteamIDs given a list of IPs",
						"parameters": [
							{
								"name": "key",
								"type": "string",
								"optional": false,
								"description": "Access key"
							},
							{
								"name": "server_ips",
								"type": "string",
								"optional": false
							}
						]
						
					},
					{
						"name": "GetServerIPsBySteamID",
						"version": 1,
						"httpmethod": "GET",
						"description": "Gets a list of server IP addresses given a list of SteamIDs",
						"parameters": [
							{
								"name": "key",
								"type": "string",
								"optional": false,
								"description": "Access key"
							},
							{
								"name": "server_steamids",
								"type": "uint64",
								"optional": false
							}
						]
						
					}
				]
				
			},
			{
				"name": "IPublishedFileService",
				"methods": [
					{
						"name": "QueryFiles",
						"version": 1,
						"httpmethod": "GET",
						"description": "Performs a search query for published files",
						"parameters": [
							{
								"name": "key",
								"type": "string",
								"optional": false,
								"description": "Access key"
							},
							{
								"name": "query_type",
								"type": "uint32",
								"optional": false,
								"description": "enumeration EPublishedFileQueryType in clientenums.h"
							},
							{
								"name": "page",
								"type": "uint32",
								"optional": false,
								"description": "Current page"
							},
							{
								"name": "numperpage",
								"type": "uint32",
								"optional": true,
								"description": "(Optional) The number of results, per page to return."
							},
							{
								"name": "creator_appid",
								"type": "uint32",
								"optional": false,
								"description": "App that created the files"
							},
							{
								"name": "appid",
								"type": "uint32",
								"optional": false,
								"description": "App that consumes the files"
							},
							{
								"name": "requiredtags",
								"type": "string",
								"optional": false,
								"description": "Tags to match on. See match_all_tags parameter below"
							},
							{
								"name": "excludedtags",
								"type": "string",
								"optional": false,
								"description": "(Optional) Tags that must NOT be present on a published file to satisfy the query."
							},
							{
								"name": "match_all_tags",
								"type": "bool",
								"optional": true,
								"description": "If true, then items must have all the tags specified, otherwise they must have at least one of the tags."
							},
							{
								"name": "required_flags",
								"type": "string",
								"optional": false,
								"description": "Required flags that must be set on any returned items"
							},
							{
								"name": "omitted_flags",
								"type": "string",
								"optional": false,
								"description": "Flags that must not be set on any returned items"
							},
							{
								"name": "search_text",
								"type": "string",
								"optional": false,
								"description": "Text to match in the item's title or description"
							},
							{
								"name": "filetype",
								"type": "uint32",
								"optional": false,
								"description": "EPublishedFileInfoMatchingFileType"
							},
							{
								"name": "child_publishedfileid",
								"type": "uint64",
								"optional": false,
								"description": "Find all items that reference the given item."
							},
							{
								"name": "days",
								"type": "uint32",
								"optional": false,
								"description": "If query_type is k_PublishedFileQueryType_RankedByTrend, then this is the number of days to get votes for [1,7]."
							},
							{
								"name": "include_recent_votes_only",
								"type": "bool",
								"optional": false,
								"description": "If query_type is k_PublishedFileQueryType_RankedByTrend, then limit result set just to items that have votes within the day range given"
							},
							{
								"name": "totalonly",
								"type": "bool",
								"optional": false,
								"description": "(Optional) If true, only return the total number of files that satisfy this query."
							},
							{
								"name": "return_vote_data",
								"type": "bool",
								"optional": false,
								"description": "Return vote data"
							},
							{
								"name": "return_tags",
								"type": "bool",
								"optional": false,
								"description": "Return tags in the file details"
							},
							{
								"name": "return_kv_tags",
								"type": "bool",
								"optional": false,
								"description": "Return key-value tags in the file details"
							},
							{
								"name": "return_previews",
								"type": "bool",
								"optional": false,
								"description": "Return preview image and video details in the file details"
							},
							{
								"name": "return_children",
								"type": "bool",
								"optional": false,
								"description": "Return child item ids in the file details"
							},
							{
								"name": "return_short_description",
								"type": "bool",
								"optional": false,
								"description": "Populate the short_description field instead of file_description"
							}
						]
						
					}
				]
				
			},
			{
				"name": "IPlayerService",
				"methods": [
					{
						"name": "GetRecentlyPlayedGames",
						"version": 1,
						"httpmethod": "GET",
						"description": "Gets information about a player's recently played games",
						"parameters": [
							{
								"name": "key",
								"type": "string",
								"optional": false,
								"description": "Access key"
							},
							{
								"name": "steamid",
								"type": "uint64",
								"optional": false,
								"description": "The player we're asking about"
							},
							{
								"name": "count",
								"type": "uint32",
								"optional": false,
								"description": "The number of games to return (0/unset: all)"
							}
						]
						
					},
					{
						"name": "GetOwnedGames",
						"version": 1,
						"httpmethod": "GET",
						"description": "Return a list of games owned by the player",
						"parameters": [
							{
								"name": "key",
								"type": "string",
								"optional": false,
								"description": "Access key"
							},
							{
								"name": "steamid",
								"type": "uint64",
								"optional": false,
								"description": "The player we're asking about"
							},
							{
								"name": "include_appinfo",
								"type": "bool",
								"optional": false,
								"description": "true if we want additional details (name, icon) about each game"
							},
							{
								"name": "include_played_free_games",
								"type": "bool",
								"optional": false,
								"description": "Free games are excluded by default.  If this is set, free games the user has played will be returned."
							},
							{
								"name": "appids_filter",
								"type": "uint32",
								"optional": false,
								"description": "if set, restricts result set to the passed in apps"
							}
						]
						
					},
					{
						"name": "GetSteamLevel",
						"version": 1,
						"httpmethod": "GET",
						"description": "Returns the Steam Level of a user",
						"parameters": [
							{
								"name": "key",
								"type": "string",
								"optional": false,
								"description": "Access key"
							},
							{
								"name": "steamid",
								"type": "uint64",
								"optional": false,
								"description": "The player we're asking about"
							}
						]
						
					},
					{
						"name": "GetBadges",
						"version": 1,
						"httpmethod": "GET",
						"description": "Gets badges that are owned by a specific user",
						"parameters": [
							{
								"name": "key",
								"type": "string",
								"optional": false,
								"description": "Access key"
							},
							{
								"name": "steamid",
								"type": "uint64",
								"optional": false,
								"description": "The player we're asking about"
							}
						]
						
					},
					{
						"name": "GetCommunityBadgeProgress",
						"version": 1,
						"httpmethod": "GET",
						"description": "Gets all the quests needed to get the specified badge, and which are completed",
						"parameters": [
							{
								"name": "key",
								"type": "string",
								"optional": false,
								"description": "Access key"
							},
							{
								"name": "steamid",
								"type": "uint64",
								"optional": false,
								"description": "The player we're asking about"
							},
							{
								"name": "badgeid",
								"type": "int32",
								"optional": false,
								"description": "The badge we're asking about"
							}
						]
						
					},
					{
						"name": "IsPlayingSharedGame",
						"version": 1,
						"httpmethod": "GET",
						"description": "Returns valid lender SteamID if game currently played is borrowed",
						"parameters": [
							{
								"name": "key",
								"type": "string",
								"optional": false,
								"description": "Access key"
							},
							{
								"name": "steamid",
								"type": "uint64",
								"optional": false,
								"description": "The player we're asking about"
							},
							{
								"name": "appid_playing",
								"type": "uint32",
								"optional": false,
								"description": "The game player is currently playing"
							}
						]
						
					}
				]
				
			},
			{
				"name": "IEconService",
				"methods": [
					{
						"name": "GetTradeOffers",
						"version": 1,
						"httpmethod": "GET",
						"description": "Get a list of sent or received trade offers",
						"parameters": [
							{
								"name": "key",
								"type": "string",
								"optional": false,
								"description": "Access key"
							},
							{
								"name": "get_sent_offers",
								"type": "bool",
								"optional": false,
								"description": "Request the list of sent offers."
							},
							{
								"name": "get_received_offers",
								"type": "bool",
								"optional": false,
								"description": "Request the list of received offers."
							},
							{
								"name": "get_descriptions",
								"type": "bool",
								"optional": false,
								"description": "If set, the item display data for the items included in the returned trade offers will also be returned."
							},
							{
								"name": "language",
								"type": "string",
								"optional": false,
								"description": "The language to use when loading item display data."
							},
							{
								"name": "active_only",
								"type": "bool",
								"optional": false,
								"description": "Indicates we should only return offers which are still active, or offers that have changed in state since the time_historical_cutoff"
							},
							{
								"name": "historical_only",
								"type": "bool",
								"optional": false,
								"description": "Indicates we should only return offers which are not active."
							},
							{
								"name": "time_historical_cutoff",
								"type": "uint32",
								"optional": false,
								"description": "When active_only is set, offers updated since this time will also be returned"
							}
						]
						
					},
					{
						"name": "GetTradeOffer",
						"version": 1,
						"httpmethod": "GET",
						"description": "Gets a specific trade offer",
						"parameters": [
							{
								"name": "key",
								"type": "string",
								"optional": false,
								"description": "Access key"
							},
							{
								"name": "tradeofferid",
								"type": "uint64",
								"optional": false
							},
							{
								"name": "language",
								"type": "string",
								"optional": false
							}
						]
						
					},
					{
						"name": "GetTradeOffersSummary",
						"version": 1,
						"httpmethod": "GET",
						"description": "Get counts of pending and new trade offers",
						"parameters": [
							{
								"name": "key",
								"type": "string",
								"optional": false,
								"description": "Access key"
							},
							{
								"name": "time_last_visit",
								"type": "uint32",
								"optional": false,
								"description": "The time the user last visited.  If not passed, will use the time the user last visited the trade offer page."
							}
						]
						
					},
					{
						"name": "DeclineTradeOffer",
						"version": 1,
						"httpmethod": "POST",
						"description": "Decline a trade offer someone sent to us",
						"parameters": [
							{
								"name": "key",
								"type": "string",
								"optional": false,
								"description": "Access key"
							},
							{
								"name": "tradeofferid",
								"type": "uint64",
								"optional": false
							}
						]
						
					},
					{
						"name": "CancelTradeOffer",
						"version": 1,
						"httpmethod": "POST",
						"description": "Cancel a trade offer we sent",
						"parameters": [
							{
								"name": "key",
								"type": "string",
								"optional": false,
								"description": "Access key"
							},
							{
								"name": "tradeofferid",
								"type": "uint64",
								"optional": false
							}
						]
						
					}
				]
				
			}
		]
		
	}
}